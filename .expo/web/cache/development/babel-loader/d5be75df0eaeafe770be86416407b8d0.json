{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Entypo } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AddWorkspaceInput = forwardRef(function (props, ref) {\n  return _jsx(View, {\n    style: [styles.inputfield, props.style],\n    children: _jsx(TextInput, {\n      value: props.value,\n      ref: ref,\n      underlineColorAndroid: \"transparent\",\n      multiline: props.multiline,\n      style: [styles.text, props.textStyle],\n      placeholder: props.placeholder,\n      onChangeText: props.onChange,\n      onChange: props.onChange,\n      keyboardType: props.keyboardType,\n      placeholderTextColor: props.placeholderTextColor,\n      onSubmitEditing: props.onSubmitEditing,\n      secureTextEntry: props.secureTextEntry,\n      defaultValue: props.defaultValue,\n      maxLength: props.maxLength,\n      autoFocus: props.autoFocus,\n      editable: props.editable,\n      numberOfLines: props.numberOfLines,\n      textAlignVertical: props.textAlignVertical\n    })\n  });\n});\nvar styles = StyleSheet.create({\n  text: {\n    fontFamily: 'Poppins_500Medium',\n    color: '#000000'\n  },\n  inputfield: {\n    marginVertical: 10,\n    marginHorizontal: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 2.84,\n    elevation: 1\n  }\n});\nexport default AddWorkspaceInput;","map":{"version":3,"names":["React","forwardRef","Entypo","Ionicons","AddWorkspaceInput","props","ref","styles","inputfield","style","value","multiline","text","textStyle","placeholder","onChange","keyboardType","placeholderTextColor","onSubmitEditing","secureTextEntry","defaultValue","maxLength","autoFocus","editable","numberOfLines","textAlignVertical","StyleSheet","create","fontFamily","color","marginVertical","marginHorizontal","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation"],"sources":["E:/react-native/task management app/Trello/src/components/TextInput/AddWorkspaceInput.js"],"sourcesContent":["import React, { forwardRef } from 'react';\r\nimport { StyleSheet, TouchableOpacity, View } from 'react-native';\r\n// import {TextInput} from 'react-native-gesture-handler';\r\nimport { TextInput } from 'react-native';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst AddWorkspaceInput = forwardRef((props, ref) => {\r\n\r\n    return (\r\n        <View style={[styles.inputfield, props.style]}>\r\n\r\n            <TextInput\r\n                value={props.value}\r\n                ref={ref}\r\n                underlineColorAndroid=\"transparent\"\r\n                multiline={props.multiline}\r\n                style={[styles.text, props.textStyle]}\r\n                placeholder={props.placeholder}\r\n                onChangeText={props.onChange}\r\n                onChange={props.onChange}\r\n                keyboardType={props.keyboardType}\r\n                placeholderTextColor={props.placeholderTextColor}\r\n                onSubmitEditing={props.onSubmitEditing}\r\n                secureTextEntry={props.secureTextEntry}\r\n                defaultValue={props.defaultValue}\r\n                maxLength={props.maxLength}\r\n                autoFocus={props.autoFocus}\r\n                editable={props.editable}\r\n                numberOfLines={props.numberOfLines}\r\n                textAlignVertical={props.textAlignVertical}\r\n            />\r\n        </View>\r\n    );\r\n});\r\nconst styles = StyleSheet.create({\r\n    text: { fontFamily: 'Poppins_500Medium', color: '#000000'  },\r\n    inputfield:{\r\n        marginVertical:10,\r\n        marginHorizontal:10,\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 2.84,\r\n        elevation: 1, \r\n    }\r\n});\r\nexport default AddWorkspaceInput;"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;AAIA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,IAAMC,iBAAiB,GAAGH,UAAU,CAAC,UAACI,KAAD,EAAQC,GAAR,EAAgB;EAEjD,OACI,KAAC,IAAD;IAAM,KAAK,EAAE,CAACC,MAAM,CAACC,UAAR,EAAoBH,KAAK,CAACI,KAA1B,CAAb;IAAA,UAEI,KAAC,SAAD;MACI,KAAK,EAAEJ,KAAK,CAACK,KADjB;MAEI,GAAG,EAAEJ,GAFT;MAGI,qBAAqB,EAAC,aAH1B;MAII,SAAS,EAAED,KAAK,CAACM,SAJrB;MAKI,KAAK,EAAE,CAACJ,MAAM,CAACK,IAAR,EAAcP,KAAK,CAACQ,SAApB,CALX;MAMI,WAAW,EAAER,KAAK,CAACS,WANvB;MAOI,YAAY,EAAET,KAAK,CAACU,QAPxB;MAQI,QAAQ,EAAEV,KAAK,CAACU,QARpB;MASI,YAAY,EAAEV,KAAK,CAACW,YATxB;MAUI,oBAAoB,EAAEX,KAAK,CAACY,oBAVhC;MAWI,eAAe,EAAEZ,KAAK,CAACa,eAX3B;MAYI,eAAe,EAAEb,KAAK,CAACc,eAZ3B;MAaI,YAAY,EAAEd,KAAK,CAACe,YAbxB;MAcI,SAAS,EAAEf,KAAK,CAACgB,SAdrB;MAeI,SAAS,EAAEhB,KAAK,CAACiB,SAfrB;MAgBI,QAAQ,EAAEjB,KAAK,CAACkB,QAhBpB;MAiBI,aAAa,EAAElB,KAAK,CAACmB,aAjBzB;MAkBI,iBAAiB,EAAEnB,KAAK,CAACoB;IAlB7B;EAFJ,EADJ;AAyBH,CA3BmC,CAApC;AA4BA,IAAMlB,MAAM,GAAGmB,UAAU,CAACC,MAAX,CAAkB;EAC7Bf,IAAI,EAAE;IAAEgB,UAAU,EAAE,mBAAd;IAAmCC,KAAK,EAAE;EAA1C,CADuB;EAE7BrB,UAAU,EAAC;IACPsB,cAAc,EAAC,EADR;IAEPC,gBAAgB,EAAC,EAFV;IAGPC,WAAW,EAAE,MAHN;IAIPC,YAAY,EAAE;MACVC,KAAK,EAAE,CADG;MAEVC,MAAM,EAAE;IAFE,CAJP;IAQPC,aAAa,EAAE,IARR;IASPC,YAAY,EAAE,IATP;IAUPC,SAAS,EAAE;EAVJ;AAFkB,CAAlB,CAAf;AAeA,eAAelC,iBAAf"},"metadata":{},"sourceType":"module"}