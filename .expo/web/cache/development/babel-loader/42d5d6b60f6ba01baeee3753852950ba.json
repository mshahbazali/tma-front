{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Entypo } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Inputfield = forwardRef(function (props, ref) {\n  return _jsx(View, {\n    style: [styles.inputfield, props.style],\n    children: props.password ? _jsxs(View, {\n      style: [{\n        flexDirection: 'row',\n        marginTop: 45,\n        marginHorizontal: 20,\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }, props.textField],\n      children: [_jsx(TextInput, {\n        value: props.value,\n        ref: ref,\n        underlineColorAndroid: \"transparent\",\n        multiline: props.multiline,\n        style: [props.textStyle, {\n          fontFamily: 'Poppins_500Medium',\n          paddingVertical: 20,\n          padding: 10,\n          width: props.warning ? '80%' : '90%'\n        }],\n        placeholder: props.placeholder,\n        onChangeText: props.onChange,\n        onChange: props.onChange,\n        keyboardType: props.keyboardType,\n        placeholderTextColor: 'black',\n        onSubmitEditing: props.onSubmitEditing,\n        secureTextEntry: props.secureTextEntry,\n        defaultValue: props.defaultValue,\n        maxLength: props.maxLength,\n        autoFocus: props.autoFocus,\n        editable: props.editable,\n        numberOfLines: props.numberOfLines,\n        textAlignVertical: props.textAlignVertical\n      }), props.warning && _jsx(Entypo, {\n        name: \"warning\",\n        size: 20,\n        color: \"red\"\n      }), props.toggleEye === false ? null : !props.secureTextEntry ? _jsx(TouchableOpacity, {\n        onPress: props.eyePress,\n        children: _jsx(Ionicons, {\n          name: \"eye\",\n          size: 23,\n          color: \"black\"\n        })\n      }) : _jsx(TouchableOpacity, {\n        onPress: props.eyePress,\n        children: _jsx(Ionicons, {\n          name: \"eye-off\",\n          size: 23,\n          color: \"black\"\n        })\n      })]\n    }) : _jsx(TextInput, {\n      value: props.value,\n      ref: ref,\n      underlineColorAndroid: \"transparent\",\n      multiline: props.multiline,\n      style: [styles.text, props.textStyle],\n      placeholder: props.placeholder,\n      onChangeText: props.onChange,\n      onChange: props.onChange,\n      keyboardType: props.keyboardType,\n      placeholderTextColor: props.placeholderTextColor,\n      onSubmitEditing: props.onSubmitEditing,\n      secureTextEntry: props.secureTextEntry,\n      defaultValue: props.defaultValue,\n      maxLength: props.maxLength,\n      autoFocus: props.autoFocus,\n      editable: props.editable,\n      numberOfLines: props.numberOfLines,\n      textAlignVertical: props.textAlignVertical\n    })\n  });\n});\nvar styles = StyleSheet.create({\n  text: {\n    fontFamily: 'Poppins_500Medium',\n    color: '#000000',\n    marginTop: 45,\n    marginHorizontal: 20,\n    paddingVertical: 20,\n    padding: 10\n  }\n});\nexport default Inputfield;","map":{"version":3,"names":["React","forwardRef","Entypo","Ionicons","Inputfield","props","ref","styles","inputfield","style","password","flexDirection","marginTop","marginHorizontal","alignItems","justifyContent","textField","value","multiline","textStyle","fontFamily","paddingVertical","padding","width","warning","placeholder","onChange","keyboardType","onSubmitEditing","secureTextEntry","defaultValue","maxLength","autoFocus","editable","numberOfLines","textAlignVertical","toggleEye","eyePress","text","placeholderTextColor","StyleSheet","create","color"],"sources":["E:/react-native/task management app/Trello/src/components/TextInput/TextInput.js"],"sourcesContent":["import React, { forwardRef } from 'react';\r\nimport { StyleSheet, TouchableOpacity, View } from 'react-native';\r\n// import {TextInput} from 'react-native-gesture-handler';\r\nimport { TextInput } from 'react-native';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst Inputfield = forwardRef((props, ref) => {\r\n\r\n  return (\r\n    <View style={[styles.inputfield, props.style]}>\r\n      {props.password ?\r\n        <View style={[{ flexDirection: 'row', marginTop: 45, marginHorizontal: 20, alignItems: 'center', justifyContent: 'space-between' }, props.textField]}>\r\n          <TextInput\r\n            value={props.value}\r\n            ref={ref}\r\n            underlineColorAndroid=\"transparent\"\r\n            multiline={props.multiline}\r\n            style={[props.textStyle, { fontFamily: 'Poppins_500Medium', paddingVertical: 20, padding: 10, width: props.warning ? '80%' : '90%' }]}\r\n            placeholder={props.placeholder}\r\n            onChangeText={props.onChange}\r\n            onChange={props.onChange}\r\n            keyboardType={props.keyboardType}\r\n            placeholderTextColor={'black'}\r\n            onSubmitEditing={props.onSubmitEditing}\r\n            secureTextEntry={props.secureTextEntry}\r\n            defaultValue={props.defaultValue}\r\n            maxLength={props.maxLength}\r\n            autoFocus={props.autoFocus}\r\n            editable={props.editable}\r\n            numberOfLines={props.numberOfLines}\r\n            textAlignVertical={props.textAlignVertical}\r\n            \r\n          />\r\n          {props.warning &&\r\n            <Entypo name=\"warning\" size={20} color=\"red\" />\r\n          }\r\n\r\n          {props.toggleEye === false ? null : !props.secureTextEntry ? <TouchableOpacity onPress={props.eyePress}>\r\n            <Ionicons name=\"eye\" size={23} color=\"black\" />\r\n          </TouchableOpacity> :\r\n            <TouchableOpacity onPress={props.eyePress}>\r\n              <Ionicons name=\"eye-off\" size={23} color=\"black\" />\r\n            </TouchableOpacity>}\r\n\r\n        </View>\r\n        :\r\n        <TextInput\r\n          value={props.value}\r\n          ref={ref}\r\n          underlineColorAndroid=\"transparent\"\r\n          multiline={props.multiline}\r\n          style={[styles.text, props.textStyle]}\r\n          placeholder={props.placeholder}\r\n          onChangeText={props.onChange}\r\n          onChange={props.onChange}\r\n          keyboardType={props.keyboardType}\r\n          placeholderTextColor={props.placeholderTextColor}\r\n          onSubmitEditing={props.onSubmitEditing}\r\n          secureTextEntry={props.secureTextEntry}\r\n          defaultValue={props.defaultValue}\r\n          maxLength={props.maxLength}\r\n          autoFocus={props.autoFocus}\r\n          editable={props.editable}\r\n          numberOfLines={props.numberOfLines}\r\n          textAlignVertical={props.textAlignVertical}\r\n        />\r\n      }\r\n    </View>\r\n  );\r\n});\r\nconst styles = StyleSheet.create({\r\n  text: { fontFamily: 'Poppins_500Medium', color: '#000000', marginTop: 45, marginHorizontal: 20, paddingVertical: 20, padding: 10 },\r\n});\r\nexport default Inputfield;"],"mappings":"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"},"metadata":{},"sourceType":"module"}