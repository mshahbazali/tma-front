{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport colors from \"../../constant/colors\";\nimport { useFonts, Poppins_100Thin, Poppins_100Thin_Italic, Poppins_200ExtraLight, Poppins_200ExtraLight_Italic, Poppins_300Light, Poppins_300Light_Italic, Poppins_400Regular, Poppins_400Regular_Italic, Poppins_500Medium, Poppins_500Medium_Italic, Poppins_600SemiBold, Poppins_600SemiBold_Italic, Poppins_700Bold, Poppins_700Bold_Italic, Poppins_800ExtraBold, Poppins_800ExtraBold_Italic, Poppins_900Black, Poppins_900Black_Italic } from '@expo-google-fonts/poppins';\nimport LoginButton from \"../../components/button/LoginButton\";\nimport { Entypo } from '@expo/vector-icons';\nimport AppLoading from \"expo-app-loading\";\nimport Header from \"../../components/header/Header\";\nimport Inputfield from \"../../components/TextInput/TextInput\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AuthContext } from \"../../Context/Auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar axios = require(\"axios\").default;\n\nvar SignUp = function SignUp() {\n  var navigation = useNavigation();\n\n  var _useContext = useContext(AuthContext),\n      setIsAuthenticated = _useContext.setIsAuthenticated,\n      isAuthenticated = _useContext.isAuthenticated,\n      setUser = _useContext.setUser;\n\n  var _useFonts = useFonts({\n    Poppins_100Thin: Poppins_100Thin,\n    Poppins_100Thin_Italic: Poppins_100Thin_Italic,\n    Poppins_200ExtraLight: Poppins_200ExtraLight,\n    Poppins_200ExtraLight_Italic: Poppins_200ExtraLight_Italic,\n    Poppins_300Light: Poppins_300Light,\n    Poppins_300Light_Italic: Poppins_300Light_Italic,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_400Regular_Italic: Poppins_400Regular_Italic,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_500Medium_Italic: Poppins_500Medium_Italic,\n    Poppins_600SemiBold: Poppins_600SemiBold,\n    Poppins_600SemiBold_Italic: Poppins_600SemiBold_Italic,\n    Poppins_700Bold: Poppins_700Bold,\n    Poppins_700Bold_Italic: Poppins_700Bold_Italic,\n    Poppins_800ExtraBold: Poppins_800ExtraBold,\n    Poppins_800ExtraBold_Italic: Poppins_800ExtraBold_Italic,\n    Poppins_900Black: Poppins_900Black,\n    Poppins_900Black_Italic: Poppins_900Black_Italic\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showPassword = _useState8[0],\n      setShowPassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setPhone = _useState10[1];\n\n  var login = function login() {\n    var form = {\n      username: name,\n      email: email,\n      password: password,\n      phone: phone,\n      verified: \"false\"\n    };\n    axios.post('http://192.168.0.106:5000/register', form).then(function (response) {\n      if (response.status == 202) {\n        alert(\"Email already exist!\");\n      } else {\n        navigation.navigate('otp');\n        setUser(response.data.user._id);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return !fontsLoaded ? _jsx(AppLoading, {}) : _jsxs(_Fragment, {\n    children: [_jsx(Header, {\n      onPress: function onPress() {\n        return navigation.navigate('loginform');\n      },\n      endHeading: 'Login'\n    }), _jsxs(View, {\n      style: styles.Mainview,\n      children: [_jsxs(View, {\n        children: [_jsx(Inputfield, {\n          placeholderTextColor: 'black',\n          placeholder: \"Name\",\n          onChange: function onChange(e) {\n            return setName(e);\n          },\n          value: name,\n          warning: true,\n          password: true,\n          toggleEye: false\n        }), _jsx(Inputfield, {\n          placeholderTextColor: 'black',\n          placeholder: \"Email\",\n          onChange: function onChange(e) {\n            return setEmail(e);\n          },\n          value: email,\n          warning: true,\n          password: true,\n          toggleEye: false,\n          keyboardType: \"email-address\"\n        }), _jsx(Inputfield, {\n          placeholderTextColor: 'black',\n          placeholder: \"Phone\",\n          onChange: function onChange(e) {\n            return setPhone(e);\n          },\n          value: phone,\n          warning: true,\n          password: true,\n          toggleEye: true,\n          keyboardType: \"numeric\"\n        }), _jsx(Inputfield, {\n          placeholderTextColor: 'black',\n          placeholder: \"Password\",\n          password: true,\n          onChange: function onChange(e) {\n            return setPassword(e);\n          },\n          value: password,\n          eyePress: function eyePress() {\n            return setShowPassword(!showPassword);\n          },\n          secureTextEntry: showPassword,\n          warning: password === '' ? true : false\n        })]\n      }), _jsx(LoginButton, {\n        onPress: function onPress() {\n          return login();\n        },\n        title: 'Sign Up',\n        textStyle: styles.LoginButtonText,\n        style: styles.LoginButton\n      })]\n    })]\n  });\n};\n\nexport default SignUp;\nvar styles = StyleSheet.create({\n  Mainview: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'space-between'\n  },\n  LoginButton: {\n    backgroundColor: colors.blue,\n    marginHorizontal: 37,\n    padding: 10,\n    borderRadius: 100,\n    marginVertical: 20\n  },\n  LoginButtonText: {\n    color: 'white',\n    fontFamily: 'Poppins_500Medium'\n  }\n});","map":{"version":3,"names":["React","useContext","useState","colors","useFonts","Poppins_100Thin","Poppins_100Thin_Italic","Poppins_200ExtraLight","Poppins_200ExtraLight_Italic","Poppins_300Light","Poppins_300Light_Italic","Poppins_400Regular","Poppins_400Regular_Italic","Poppins_500Medium","Poppins_500Medium_Italic","Poppins_600SemiBold","Poppins_600SemiBold_Italic","Poppins_700Bold","Poppins_700Bold_Italic","Poppins_800ExtraBold","Poppins_800ExtraBold_Italic","Poppins_900Black","Poppins_900Black_Italic","LoginButton","Entypo","AppLoading","Header","Inputfield","useNavigation","AuthContext","axios","require","default","SignUp","navigation","setIsAuthenticated","isAuthenticated","setUser","fontsLoaded","name","setName","email","setEmail","password","setPassword","showPassword","setShowPassword","phone","setPhone","login","form","username","verified","post","then","response","status","alert","navigate","data","user","_id","catch","error","console","log","styles","Mainview","e","LoginButtonText","StyleSheet","create","flex","backgroundColor","justifyContent","blue","marginHorizontal","padding","borderRadius","marginVertical","color","fontFamily"],"sources":["E:/react-native/task management app/Trello/src/screens/authentication/SignUp.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\n\r\nimport { Text, View, StyleSheet, ScrollView, TextInput } from \"react-native\"\r\nimport colors from \"../../constant/colors\";\r\nimport {\r\n    useFonts,\r\n    Poppins_100Thin,\r\n    Poppins_100Thin_Italic,\r\n    Poppins_200ExtraLight,\r\n    Poppins_200ExtraLight_Italic,\r\n    Poppins_300Light,\r\n    Poppins_300Light_Italic,\r\n    Poppins_400Regular,\r\n    Poppins_400Regular_Italic,\r\n    Poppins_500Medium,\r\n    Poppins_500Medium_Italic,\r\n    Poppins_600SemiBold,\r\n    Poppins_600SemiBold_Italic,\r\n    Poppins_700Bold,\r\n    Poppins_700Bold_Italic,\r\n    Poppins_800ExtraBold,\r\n    Poppins_800ExtraBold_Italic,\r\n    Poppins_900Black,\r\n    Poppins_900Black_Italic,\r\n} from '@expo-google-fonts/poppins';\r\nimport LoginButton from \"../../components/button/LoginButton\";\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport AppLoading from \"expo-app-loading\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Inputfield from \"../../components/TextInput/TextInput\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { AuthContext } from \"../../Context/Auth\";\r\nconst axios = require(\"axios\").default;\r\n\r\n\r\n\r\nconst SignUp = () => {\r\n    const navigation = useNavigation()\r\n    const { setIsAuthenticated, isAuthenticated , setUser } = useContext(AuthContext)\r\n    let [fontsLoaded] = useFonts({\r\n        Poppins_100Thin,\r\n        Poppins_100Thin_Italic,\r\n        Poppins_200ExtraLight,\r\n        Poppins_200ExtraLight_Italic,\r\n        Poppins_300Light,\r\n        Poppins_300Light_Italic,\r\n        Poppins_400Regular,\r\n        Poppins_400Regular_Italic,\r\n        Poppins_500Medium,\r\n        Poppins_500Medium_Italic,\r\n        Poppins_600SemiBold,\r\n        Poppins_600SemiBold_Italic,\r\n        Poppins_700Bold,\r\n        Poppins_700Bold_Italic,\r\n        Poppins_800ExtraBold,\r\n        Poppins_800ExtraBold_Italic,\r\n        Poppins_900Black,\r\n        Poppins_900Black_Italic,\r\n    });\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [phone, setPhone] = useState(false)\r\n\r\n\r\n    const login = () => {\r\n        const form = {\r\n            username: name,\r\n            email: email,\r\n            password: password,\r\n            phone: phone,\r\n            verified: \"false\"\r\n        }\r\n        axios.post('http://192.168.0.106:5000/register', form)\r\n            .then(function (response) {\r\n                if (response.status == 202) {\r\n                    alert(\"Email already exist!\")\r\n                } else {\r\n                    navigation.navigate('otp')\r\n                    setUser(response.data.user._id)\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    return !fontsLoaded ? <AppLoading /> : (\r\n        <>\r\n            <Header onPress={() => navigation.navigate('loginform')} endHeading={'Login'} />\r\n            <View style={styles.Mainview}>\r\n                <View>\r\n\r\n                    <Inputfield\r\n                        placeholderTextColor={'black'}\r\n                        placeholder=\"Name\"\r\n                        onChange={(e) => setName(e)}\r\n                        value={name}\r\n                        warning={true}\r\n                        password={true}\r\n                        toggleEye={false}\r\n                    />\r\n\r\n                    <Inputfield\r\n                        placeholderTextColor={'black'}\r\n                        placeholder=\"Email\"\r\n                        onChange={(e) => setEmail(e)}\r\n                        value={email}\r\n                        warning={true}\r\n                        password={true}\r\n                        toggleEye={false}\r\n                        keyboardType=\"email-address\"\r\n\r\n                    />\r\n\r\n                    <Inputfield\r\n                        placeholderTextColor={'black'}\r\n                        placeholder=\"Phone\"\r\n                        onChange={(e) => setPhone(e)}\r\n                        value={phone}\r\n                        warning={true}\r\n                        password={true}\r\n                        toggleEye={true}\r\n                        keyboardType=\"numeric\"\r\n                    />\r\n\r\n                    <Inputfield\r\n                        placeholderTextColor={'black'}\r\n                        placeholder=\"Password\"\r\n                        password={true}\r\n                        onChange={(e) => setPassword(e)}\r\n                        value={password}\r\n                        eyePress={() => setShowPassword(!showPassword)}\r\n                        secureTextEntry={showPassword}\r\n                        warning={password === '' ? true : false}\r\n                    />\r\n\r\n                </View>\r\n\r\n\r\n                <LoginButton onPress={() => login()} title={'Sign Up'} textStyle={styles.LoginButtonText} style={styles.LoginButton} />\r\n\r\n            </View>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default SignUp;\r\n\r\nconst styles = StyleSheet.create({\r\n    Mainview: { flex: 1, backgroundColor: '#fff', justifyContent: 'space-between' },\r\n    LoginButton: { backgroundColor: colors.blue, marginHorizontal: 37, padding: 10, borderRadius: 100, marginVertical: 20 },\r\n    LoginButtonText: { color: 'white', fontFamily: 'Poppins_500Medium' },\r\n\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}