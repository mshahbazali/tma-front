{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons, AntDesign, FontAwesome, Feather, Entypo, MaterialIcons } from '@expo/vector-icons';\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts, Poppins_100Thin, Poppins_100Thin_Italic, Poppins_200ExtraLight, Poppins_200ExtraLight_Italic, Poppins_300Light, Poppins_300Light_Italic, Poppins_400Regular, Poppins_400Regular_Italic, Poppins_500Medium, Poppins_500Medium_Italic, Poppins_600SemiBold, Poppins_600SemiBold_Italic, Poppins_700Bold, Poppins_700Bold_Italic, Poppins_800ExtraBold, Poppins_800ExtraBold_Italic, Poppins_900Black, Poppins_900Black_Italic } from '@expo-google-fonts/poppins';\nimport colors from \"../../constant/colors\";\nimport YellowBtn from \"../../components/button/YellowBtn\";\nimport AddWorkspaceInput from \"../../components/TextInput/AddWorkspaceInput\";\nimport Header from \"../../components/header/Header\";\nimport DoneBtn from \"../../components/button/DoneBtn\";\nimport Inputfield from \"../../components/TextInput/TextInput\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ImagePickerModal } from \"../../components/Modals/ImagePickerModal\";\nimport { accessCamera, accessGallery } from \"../../utils/ImagePicker\";\nimport * as ImagePicker from 'expo-image-picker';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport LoginButton from \"../../components/button/LoginButton\";\nimport SelectBox from 'react-native-multi-selectbox';\nimport { xorBy } from 'lodash';\nimport { AuthContext } from \"../../Context/Auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CreateTask = function CreateTask(props) {\n  var _useFonts = useFonts({\n    Poppins_100Thin: Poppins_100Thin,\n    Poppins_100Thin_Italic: Poppins_100Thin_Italic,\n    Poppins_200ExtraLight: Poppins_200ExtraLight,\n    Poppins_200ExtraLight_Italic: Poppins_200ExtraLight_Italic,\n    Poppins_300Light: Poppins_300Light,\n    Poppins_300Light_Italic: Poppins_300Light_Italic,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_400Regular_Italic: Poppins_400Regular_Italic,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_500Medium_Italic: Poppins_500Medium_Italic,\n    Poppins_600SemiBold: Poppins_600SemiBold,\n    Poppins_600SemiBold_Italic: Poppins_600SemiBold_Italic,\n    Poppins_700Bold: Poppins_700Bold,\n    Poppins_700Bold_Italic: Poppins_700Bold_Italic,\n    Poppins_800ExtraBold: Poppins_800ExtraBold,\n    Poppins_800ExtraBold_Italic: Poppins_800ExtraBold_Italic,\n    Poppins_900Black: Poppins_900Black,\n    Poppins_900Black_Italic: Poppins_900Black_Italic\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      workspacename = _useState2[0],\n      setWorkspacename = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      workspaceabout = _useState4[0],\n      setWorkspaceabout = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      multipleimages = _useState6[0],\n      setMultipleimages = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      timePicker = _useState8[0],\n      setTimePicker = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      timePicker2 = _useState10[0],\n      setTimePicke2 = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      visible = _useState12[0],\n      setVisible = _useState12[1];\n\n  var _useState13 = useState(new Date()),\n      _useState14 = _slicedToArray(_useState13, 2),\n      time = _useState14[0],\n      setTime = _useState14[1];\n\n  var _useState15 = useState(new Date()),\n      _useState16 = _slicedToArray(_useState15, 2),\n      time2 = _useState16[0],\n      setTime2 = _useState16[1];\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      currentWorkspace = _useContext.currentWorkspace,\n      taskId = _useContext.taskId;\n\n  var navigation = useNavigation();\n  var date = new Date();\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      title = _useState18[0],\n      setTitle = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      description = _useState20[0],\n      setDescription = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      taggedPersons = _useState22[0],\n      setTaggedPersons = _useState22[1];\n\n  var createdDate = date.getDate();\n  console.log(\"createdDate\", createdDate);\n\n  var hideDatePicker = function hideDatePicker() {\n    setTimePicke2(false);\n    setTimePicker(false);\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    setTime(date);\n    hideDatePicker();\n  };\n\n  var handleConfirm2 = function handleConfirm2(date) {\n    setTime2(date);\n    hideDatePicker();\n  };\n\n  var K_OPTIONS = [{\n    item: 'Juventus',\n    id: 'JUVE'\n  }];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      selectedTeams = _useState24[0],\n      setSelectedTeams = _useState24[1];\n\n  var _useState25 = useState(),\n      _useState26 = _slicedToArray(_useState25, 2),\n      workspaceUsers = _useState26[0],\n      setWorkspaceUsers = _useState26[1];\n\n  function onMultiChange() {\n    return function (item) {\n      return setSelectedTeams(xorBy(selectedTeams, [item], 'id'));\n    };\n  }\n\n  var users = currentWorkspace.users;\n\n  var getWorkSpaceUsers = function getWorkSpaceUsers() {\n    var form = {\n      workspaceUsers: users\n    };\n    axios.post('http://192.168.0.106:5000/workspace/getUsers', form).then(function (response) {\n      setWorkspaceUsers(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(function () {\n    getWorkSpaceUsers();\n  }, []);\n  console.log(\"workspaceUsers\", workspaceUsers);\n  var hours = time.getHours();\n  var minutes = time.getMinutes();\n  var ampm = hours >= 12 ? 'PM' : 'AM';\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  minutes = minutes < 10 ? '0' + minutes : minutes;\n  var deadline = hours + ':' + minutes + ' ' + ampm;\n\n  var createTask = function createTask() {\n    var form = {\n      title: title,\n      description: description,\n      timeline: deadline,\n      status: false,\n      createdDate: \"sakfjh\",\n      taskCreatorId: user._id,\n      workSpaceId: currentCard._id\n    };\n  };\n\n  return !fontsLoaded ? _jsx(AppLoading, {}) : _jsxs(ScrollView, {\n    style: styles.Mainview,\n    children: [_jsx(DateTimePickerModal, {\n      isVisible: timePicker,\n      mode: \"date\",\n      onConfirm: handleConfirm,\n      onCancel: hideDatePicker\n    }), _jsx(Header, {\n      endHeading: \"Create Task\",\n      headingStyle: {\n        fontSize: 20,\n        color: 'black',\n        fontFamily: 'Poppins_700Bold'\n      }\n    }), _jsxs(View, {\n      style: {\n        paddingBottom: 2\n      },\n      children: [_jsx(Text, {\n        style: styles.activity,\n        children: \"Task title\"\n      }), _jsx(View, {\n        style: {},\n        children: _jsx(Inputfield, {\n          placeholderTextColor: 'gray',\n          placeholder: \"Task Title\",\n          onChange: function onChange(e) {\n            return setTitle(e);\n          },\n          value: title,\n          textStyle: styles.input\n        })\n      })]\n    }), _jsxs(View, {\n      style: {\n        paddingBottom: 5\n      },\n      children: [_jsx(Text, {\n        style: styles.activity,\n        children: \"Task Discription\"\n      }), _jsx(View, {\n        style: {},\n        children: _jsx(Inputfield, {\n          placeholderTextColor: 'gray',\n          placeholder: \"\",\n          onChange: function onChange(e) {\n            return setDescription(e);\n          },\n          value: description,\n          textStyle: [styles.input, {\n            height: 150\n          }],\n          numberOfLines: 20,\n          textAlignVertical: 'top',\n          multiline: true\n        })\n      })]\n    }), _jsxs(View, {\n      style: {\n        paddingBottom: 2,\n        alignItems: \"center\"\n      },\n      children: [_jsx(View, {\n        style: {\n          width: \"100%\"\n        },\n        children: _jsx(Text, {\n          style: styles.activity,\n          children: \"Tag Person\"\n        })\n      }), _jsx(View, {}), _jsx(SelectBox, {\n        label: \"\",\n        options: K_OPTIONS,\n        selectedValues: selectedTeams,\n        onMultiSelect: onMultiChange(),\n        onTapClose: onMultiChange(),\n        isMulti: true,\n        toggleIconColor: \"blue\",\n        searchIconColor: \"blue\",\n        arrowIconColor: \"blue\",\n        width: \"90%\"\n      })]\n    }), _jsx(Text, {\n      style: styles.activity,\n      children: \"Time Slots\"\n    }), _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        marginBottom: 20\n      },\n      children: _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          setTimePicker(true);\n        },\n        style: {\n          width: 150,\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          paddingVertical: 5,\n          backgroundColor: colors.greyinput\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontFamily: 'Poppins_500Medium',\n            letterSpacing: -0.575,\n            padding: 10,\n            fontSize: 15,\n            color: colors.textgreylight1\n          },\n          children: time.getDate() + \" / \" + time.getMonth() + \" / \" + time.getFullYear()\n        }), _jsx(AntDesign, {\n          name: \"caretdown\",\n          size: 12,\n          color: colors.textgreylight1\n        })]\n      })\n    }), _jsx(LoginButton, {\n      onPress: function onPress() {\n        return createTask();\n      },\n      title: 'Create Task',\n      textStyle: styles.LoginButtonText,\n      style: styles.LoginButton\n    })]\n  });\n};\n\nexport default CreateTask;\nvar styles = StyleSheet.create({\n  Mainview: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  DoneBtn: {\n    backgroundColor: colors.blue,\n    marginHorizontal: 37,\n    padding: 10,\n    borderRadius: 100,\n    height: 80,\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  DoneBtntext: {\n    color: 'white',\n    fontFamily: 'Poppins_500Medium',\n    textAlign: 'center'\n  },\n  activity: {\n    fontSize: 14,\n    color: 'black',\n    fontFamily: 'Poppins_700Bold',\n    marginHorizontal: 15,\n    marginTop: 30\n  },\n  input: {\n    fontSize: 12,\n    fontFamily: 'Poppins_500Medium',\n    color: 'black',\n    marginTop: 5,\n    marginHorizontal: 18,\n    paddingVertical: 0,\n    padding: 0,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    marginHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  LeaveBtn: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  LoginButton: {\n    marginBottom: 20,\n    backgroundColor: colors.blue,\n    marginHorizontal: 30,\n    padding: 10,\n    borderRadius: 100\n  },\n  LoginButtonText: {\n    color: 'white',\n    fontFamily: 'Poppins_700Bold'\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","useReducer","useState","Ionicons","AntDesign","FontAwesome","Feather","Entypo","MaterialIcons","AppLoading","useFonts","Poppins_100Thin","Poppins_100Thin_Italic","Poppins_200ExtraLight","Poppins_200ExtraLight_Italic","Poppins_300Light","Poppins_300Light_Italic","Poppins_400Regular","Poppins_400Regular_Italic","Poppins_500Medium","Poppins_500Medium_Italic","Poppins_600SemiBold","Poppins_600SemiBold_Italic","Poppins_700Bold","Poppins_700Bold_Italic","Poppins_800ExtraBold","Poppins_800ExtraBold_Italic","Poppins_900Black","Poppins_900Black_Italic","colors","YellowBtn","AddWorkspaceInput","Header","DoneBtn","Inputfield","useNavigation","ImagePickerModal","accessCamera","accessGallery","ImagePicker","DateTimePickerModal","LoginButton","SelectBox","xorBy","AuthContext","CreateTask","props","fontsLoaded","workspacename","setWorkspacename","workspaceabout","setWorkspaceabout","multipleimages","setMultipleimages","timePicker","setTimePicker","timePicker2","setTimePicke2","visible","setVisible","Date","time","setTime","time2","setTime2","user","currentWorkspace","taskId","navigation","date","title","setTitle","description","setDescription","taggedPersons","setTaggedPersons","createdDate","getDate","console","log","hideDatePicker","handleConfirm","handleConfirm2","K_OPTIONS","item","id","selectedTeams","setSelectedTeams","workspaceUsers","setWorkspaceUsers","onMultiChange","users","getWorkSpaceUsers","form","axios","post","then","response","data","catch","error","hours","getHours","minutes","getMinutes","ampm","deadline","createTask","timeline","status","taskCreatorId","_id","workSpaceId","currentCard","styles","Mainview","fontSize","color","fontFamily","paddingBottom","activity","e","input","height","alignItems","width","flexDirection","justifyContent","marginBottom","paddingVertical","backgroundColor","greyinput","letterSpacing","padding","textgreylight1","getMonth","getFullYear","LoginButtonText","StyleSheet","create","flex","blue","marginHorizontal","borderRadius","DoneBtntext","textAlign","marginTop","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","LeaveBtn"],"sources":["E:/react-native/task management app/Trello/src/screens/workspace/CreateTask.js"],"sourcesContent":["\r\nimport React, { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, TextInput, ImageBackground, StyleSheet, ScrollView, Image } from \"react-native\";\r\nimport { Ionicons, AntDesign, FontAwesome, Feather, Entypo, MaterialIcons } from '@expo/vector-icons';\r\n\r\nimport AppLoading from \"expo-app-loading\";\r\n\r\nimport {\r\n    useFonts,\r\n    Poppins_100Thin,\r\n    Poppins_100Thin_Italic,\r\n    Poppins_200ExtraLight,\r\n    Poppins_200ExtraLight_Italic,\r\n    Poppins_300Light,\r\n    Poppins_300Light_Italic,\r\n    Poppins_400Regular,\r\n    Poppins_400Regular_Italic,\r\n    Poppins_500Medium,\r\n    Poppins_500Medium_Italic,\r\n    Poppins_600SemiBold,\r\n    Poppins_600SemiBold_Italic,\r\n    Poppins_700Bold,\r\n    Poppins_700Bold_Italic,\r\n    Poppins_800ExtraBold,\r\n    Poppins_800ExtraBold_Italic,\r\n    Poppins_900Black,\r\n    Poppins_900Black_Italic,\r\n} from '@expo-google-fonts/poppins';\r\nimport colors from \"../../constant/colors\";\r\nimport YellowBtn from \"../../components/button/YellowBtn\";\r\nimport AddWorkspaceInput from \"../../components/TextInput/AddWorkspaceInput\";\r\nimport Header from \"../../components/header/Header\";\r\nimport DoneBtn from \"../../components/button/DoneBtn\";\r\nimport Inputfield from \"../../components/TextInput/TextInput\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { ImagePickerModal } from '../../components/Modals/ImagePickerModal'\r\nimport { accessCamera, accessGallery } from \"../../utils/ImagePicker\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport LoginButton from \"../../components/button/LoginButton\";\r\nimport SelectBox from 'react-native-multi-selectbox'\r\nimport { xorBy } from 'lodash'\r\nimport { AuthContext } from \"../../Context/Auth\";\r\n\r\n\r\n\r\nconst CreateTask = (props) => {\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        Poppins_100Thin,\r\n        Poppins_100Thin_Italic,\r\n        Poppins_200ExtraLight,\r\n        Poppins_200ExtraLight_Italic,\r\n        Poppins_300Light,\r\n        Poppins_300Light_Italic,\r\n        Poppins_400Regular,\r\n        Poppins_400Regular_Italic,\r\n        Poppins_500Medium,\r\n        Poppins_500Medium_Italic,\r\n        Poppins_600SemiBold,\r\n        Poppins_600SemiBold_Italic,\r\n        Poppins_700Bold,\r\n        Poppins_700Bold_Italic,\r\n        Poppins_800ExtraBold,\r\n        Poppins_800ExtraBold_Italic,\r\n        Poppins_900Black,\r\n        Poppins_900Black_Italic,\r\n    });\r\n    const [workspacename, setWorkspacename] = useState('')\r\n    const [workspaceabout, setWorkspaceabout] = useState('')\r\n    const [multipleimages, setMultipleimages] = useState([]);\r\n    const [timePicker, setTimePicker] = useState(false);\r\n    const [timePicker2, setTimePicke2] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n    const [time, setTime] = useState(new Date());\r\n    const [time2, setTime2] = useState(new Date());\r\n    const { user, currentWorkspace, taskId } = useContext(AuthContext)\r\n\r\n    const navigation = useNavigation()\r\n    const date = new Date()\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [taggedPersons, setTaggedPersons] = useState([])\r\n    const createdDate = date.getDate()\r\n\r\n\r\n    console.log(\"createdDate\", createdDate)\r\n\r\n    const hideDatePicker = () => {\r\n        setTimePicke2(false);\r\n        setTimePicker(false)\r\n    };\r\n\r\n    const handleConfirm = (date) => {\r\n        setTime(date);\r\n        hideDatePicker();\r\n    };\r\n\r\n    const handleConfirm2 = (date) => {\r\n        setTime2(date);\r\n        hideDatePicker();\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    // Options data must contain 'item' & 'id' keys\r\n\r\n    const K_OPTIONS = [\r\n        {\r\n            item: 'Juventus',\r\n            id: 'JUVE',\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    const [selectedTeams, setSelectedTeams] = useState([])\r\n    const [workspaceUsers , setWorkspaceUsers] = useState()\r\n\r\n    function onMultiChange() {\r\n        return (item) => setSelectedTeams(xorBy(selectedTeams, [item], 'id'))\r\n    }\r\n\r\n   const users = currentWorkspace.users\r\n      const getWorkSpaceUsers = () => {\r\n        const form = {\r\n            workspaceUsers: users\r\n        }\r\n        axios.post('http://192.168.0.106:5000/workspace/getUsers', form)\r\n            .then(function (response) {\r\n                setWorkspaceUsers(response.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getWorkSpaceUsers()\r\n    },[])\r\n\r\n    console.log(\"workspaceUsers\", workspaceUsers)\r\n\r\n    let hours = time.getHours();\r\n    let minutes = time.getMinutes();\r\n    let ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    let deadline = hours + ':' + minutes + ' ' + ampm;\r\n\r\n\r\n    // console.log(\"start time\", startTime)\r\n\r\n\r\n    const createTask = () => {\r\n        const form = {\r\n            title: title,\r\n            description: description,\r\n            timeline: deadline,\r\n            status: false,\r\n            createdDate: \"sakfjh\",\r\n            taskCreatorId: user._id,\r\n            workSpaceId: currentCard._id\r\n        }\r\n    }\r\n\r\n    \r\n    return !fontsLoaded ? <AppLoading /> : (\r\n\r\n        <ScrollView style={styles.Mainview}>\r\n\r\n\r\n\r\n            <DateTimePickerModal\r\n                isVisible={timePicker}\r\n                mode=\"date\"\r\n                onConfirm={handleConfirm}\r\n                onCancel={hideDatePicker}\r\n            />\r\n\r\n\r\n            <Header endHeading=\"Create Task\" headingStyle={{ fontSize: 20, color: 'black', fontFamily: 'Poppins_700Bold' }} />\r\n\r\n            <View style={{ paddingBottom: 2 }}>\r\n                <Text style={styles.activity} >Task title</Text>\r\n                <View style={{}}>\r\n                    <Inputfield\r\n                        placeholderTextColor={'gray'}\r\n                        placeholder=\"Task Title\"\r\n                        onChange={(e) => setTitle(e)}\r\n                        value={title}\r\n                        textStyle={styles.input}\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n\r\n            <View style={{ paddingBottom: 5 }}>\r\n                <Text style={styles.activity} >Task Discription</Text>\r\n                <View style={{}}>\r\n                    <Inputfield\r\n                        placeholderTextColor={'gray'}\r\n                        placeholder=\"\"\r\n                        onChange={(e) => setDescription(e)}\r\n                        value={description}\r\n                        textStyle={[styles.input, { height: 150 }]}\r\n                        numberOfLines={20}\r\n                        textAlignVertical={'top'}\r\n                        multiline={true}\r\n                    />\r\n                </View>\r\n            </View>\r\n            <View style={{ paddingBottom: 2, alignItems: \"center\" }}>\r\n                <View style={{width:\"100%\"}}>\r\n                    <Text style={styles.activity} >Tag Person</Text>\r\n                </View>\r\n                <View />\r\n                    <SelectBox\r\n                        label=\"\"\r\n                        options={K_OPTIONS}\r\n                        selectedValues={selectedTeams}\r\n                        onMultiSelect={onMultiChange()}\r\n                        onTapClose={onMultiChange()}\r\n                        isMulti\r\n                        toggleIconColor=\"blue\"\r\n                        searchIconColor=\"blue\"\r\n                        arrowIconColor=\"blue\"\r\n                        width=\"90%\"\r\n                    />\r\n            </View>\r\n\r\n            {/* Image picker  */}\r\n\r\n            <Text style={styles.activity} >Time Slots</Text>\r\n\r\n\r\n            <View\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-around',\r\n                    alignItems: 'center',\r\n                    marginBottom: 20,\r\n                }}>\r\n                <TouchableOpacity\r\n                    onPress={() => {\r\n                        setTimePicker(true);\r\n                    }}\r\n                    style={{\r\n                        width: 150,\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-around',\r\n                        alignItems: 'center',\r\n                        paddingVertical: 5,\r\n                        backgroundColor: colors.greyinput,\r\n                    }}>\r\n                    <Text\r\n                        style={{\r\n                            fontFamily: 'Poppins_500Medium',\r\n                            letterSpacing: -0.575,\r\n                            padding: 10,\r\n                            fontSize: 15,\r\n                            color: colors.textgreylight1,\r\n                        }}>\r\n                        {time.getDate() + \" / \" + time.getMonth() + \" / \" + time.getFullYear()}\r\n                    </Text>\r\n                    <AntDesign\r\n                        name=\"caretdown\"\r\n                        size={12}\r\n                        color={colors.textgreylight1}\r\n                    />\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            {/* done btn  */}\r\n            <LoginButton onPress={() => createTask()} title={'Create Task'} textStyle={styles.LoginButtonText} style={styles.LoginButton} />\r\n\r\n\r\n        </ScrollView>\r\n    )\r\n\r\n}\r\n\r\nexport default CreateTask;\r\n\r\nconst styles = StyleSheet.create({\r\n    Mainview: { flex: 1, backgroundColor: '#fff' },\r\n    DoneBtn: { backgroundColor: colors.blue, marginHorizontal: 37, padding: 10, borderRadius: 100, height: 80, width: 80, alignItems: 'center', justifyContent: 'center' },\r\n    DoneBtntext: { color: 'white', fontFamily: 'Poppins_500Medium', textAlign: 'center' },\r\n    activity: { fontSize: 14, color: 'black', fontFamily: 'Poppins_700Bold', marginHorizontal: 15, marginTop: 30 },\r\n    input: {\r\n        fontSize: 12, fontFamily: 'Poppins_500Medium', color: 'black', marginTop: 5, marginHorizontal: 18, paddingVertical: 0, padding: 0,\r\n        flexDirection: 'row',\r\n        backgroundColor: 'white',\r\n        marginHorizontal: 15,\r\n        paddingVertical: 10,\r\n        borderRadius: 5,\r\n        paddingHorizontal: 10,\r\n        // marginTop: 40,\r\n        //shadow\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    LeaveBtn: { justifyContent: 'center', alignItems: 'center' },\r\n    LoginButton: { marginBottom: 20, backgroundColor: colors.blue, marginHorizontal: 30, padding: 10, borderRadius: 100 },\r\n    LoginButtonText: { color: 'white', fontFamily: 'Poppins_700Bold' },\r\n\r\n\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}