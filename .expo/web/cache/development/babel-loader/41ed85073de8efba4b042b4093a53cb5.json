{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FormData from 'form-data';\nimport { CodeField, Cursor, useBlurOnFulfill, useClearByFocusCell } from 'react-native-confirmation-code-field';\nimport Header from \"../../components/header/Header\";\nimport LoginButton from \"../../components/button/LoginButton\";\nimport colors from \"../../constant/colors\";\nimport { useFonts, Poppins_100Thin, Poppins_100Thin_Italic, Poppins_200ExtraLight, Poppins_200ExtraLight_Italic, Poppins_300Light, Poppins_300Light_Italic, Poppins_400Regular, Poppins_400Regular_Italic, Poppins_500Medium, Poppins_500Medium_Italic, Poppins_600SemiBold, Poppins_600SemiBold_Italic, Poppins_700Bold, Poppins_700Bold_Italic, Poppins_800ExtraBold, Poppins_800ExtraBold_Italic, Poppins_900Black, Poppins_900Black_Italic } from '@expo-google-fonts/poppins';\nimport AppLoading from 'expo-app-loading';\nimport { AuthContext } from \"../../Context/Auth\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Otp = function Otp() {\n  var _useContext = useContext(AuthContext),\n      setIsAuthenticated = _useContext.setIsAuthenticated,\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useFonts = useFonts({\n    Poppins_100Thin: Poppins_100Thin,\n    Poppins_100Thin_Italic: Poppins_100Thin_Italic,\n    Poppins_200ExtraLight: Poppins_200ExtraLight,\n    Poppins_200ExtraLight_Italic: Poppins_200ExtraLight_Italic,\n    Poppins_300Light: Poppins_300Light,\n    Poppins_300Light_Italic: Poppins_300Light_Italic,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_400Regular_Italic: Poppins_400Regular_Italic,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_500Medium_Italic: Poppins_500Medium_Italic,\n    Poppins_600SemiBold: Poppins_600SemiBold,\n    Poppins_600SemiBold_Italic: Poppins_600SemiBold_Italic,\n    Poppins_700Bold: Poppins_700Bold,\n    Poppins_700Bold_Italic: Poppins_700Bold_Italic,\n    Poppins_800ExtraBold: Poppins_800ExtraBold,\n    Poppins_800ExtraBold_Italic: Poppins_800ExtraBold_Italic,\n    Poppins_900Black: Poppins_900Black,\n    Poppins_900Black_Italic: Poppins_900Black_Italic\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notificationerror = _useState4[0],\n      setNotificationError = _useState4[1];\n\n  var cellCount = 4;\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timerCount = _useState6[0],\n      setTimer = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      otploading = _useState14[0],\n      setOtpLoading = _useState14[1];\n\n  var navigation = useNavigation();\n  var ref = useBlurOnFulfill({\n    value: value,\n    cellCount: cellCount\n  });\n\n  var _useClearByFocusCell = useClearByFocusCell({\n    value: value,\n    setValue: setValue\n  }),\n      _useClearByFocusCell2 = _slicedToArray(_useClearByFocusCell, 2),\n      props = _useClearByFocusCell2[0],\n      getCellOnLayoutHandler = _useClearByFocusCell2[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setTimer(function (lastTimerCount) {\n        lastTimerCount <= 1 && clearInterval(interval);\n        return lastTimerCount - 1;\n      });\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [timerCount]);\n  useEffect(function () {\n    if (value.length === 4) {\n      setError(false);\n    }\n  }, [value]);\n\n  var verify = function verify() {\n    var form = {\n      otp: value\n    };\n    console.log(form);\n    axios.post('http://192.168.0.106:5000/verify', form).then(function (response) {\n      console.log(response.status);\n\n      if (response.status == 204) {\n        alert(\"Please Fill valid OTP!\");\n      } else if (response.status == 203) {\n        alert(\"Please fill valid information\");\n      } else if (response.status == 202) {\n        navigation.navigate('loginform');\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var resendOtp = function resendOtp() {\n    var form = {\n      id: user\n    };\n    axios.post('http://192.168.0.106:5000/resend', form).then(function (response) {\n      alert(\"OTP sent again\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return !fontsLoaded ? _jsx(AppLoading, {}) : _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Header, {}), _jsxs(View, {\n        style: styles.main,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \"please enter the verfication code\"\n        }), _jsx(View, {\n          style: styles.otpSection,\n          children: _jsx(CodeField, _objectSpread(_objectSpread({\n            autoFocus: true,\n            ref: ref\n          }, props), {}, {\n            value: value,\n            textInputStyle: {},\n            onChangeText: setValue,\n            cellCount: cellCount,\n            rootStyle: styles.codeFieldRoot,\n            keyboardType: \"number-pad\",\n            textContentType: \"oneTimeCode\",\n            renderCell: function renderCell(_ref) {\n              var index = _ref.index,\n                  symbol = _ref.symbol,\n                  isFocused = _ref.isFocused;\n              return _jsx(View, {\n                onLayout: getCellOnLayoutHandler(index),\n                style: [styles.cell, isFocused && styles.focusCell, error === true && styles.errorBorder],\n                children: _jsx(Text, {\n                  style: {\n                    fontSize: 45,\n                    color: 'black',\n                    fontFamily: 'Montserrat-Black',\n                    textAlign: 'center'\n                  },\n                  allowFontScaling: false,\n                  children: symbol || (isFocused ? _jsx(Cursor, {}) : null)\n                })\n              }, index);\n            }\n          }))\n        }), otploading ? _jsx(ActivityIndicator, {\n          color: 'red',\n          size: \"large\"\n        }) : value.length === 4 && timerCount > 0 ? _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center'\n          },\n          children: [_jsx(Text, {\n            style: styles.complete,\n            children: \"Complete \"\n          }), _jsx(FontAwesome, {\n            name: \"check\",\n            color: 'red',\n            size: 18\n          })]\n        }) : timerCount <= 0 ? _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return resendOtp();\n          },\n          children: _jsx(Text, {\n            style: styles.tryAgain,\n            children: \"Tap to Send Otp Again\"\n          })\n        }) : _jsxs(Text, {\n          style: styles.tryAgain,\n          children: [\"Try Again in \", timerCount]\n        })]\n      }), _jsx(LoginButton, {\n        onPress: function onPress() {\n          return verify();\n        },\n        title: 'Check Otp',\n        textStyle: styles.LoginButtonText,\n        style: styles.LoginButton\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  main: {\n    flex: 1,\n    justifyContent: 'space-evenly'\n  },\n  text: {\n    fontSize: 16,\n    color: 'black',\n    textAlign: 'center',\n    fontFamily: 'Poppins_700Bold',\n    letterSpacing: 0.09\n  },\n  otpSection: {\n    marginVertical: 24,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  cell: {\n    fontWeight: '600',\n    color: 'red',\n    fontFamily: 'Poppins_700Bold',\n    fontSize: 56,\n    textAlign: 'center',\n    height: 102,\n    width: 77,\n    borderRadius: 10,\n    marginHorizontal: 3,\n    justifyContent: 'center',\n    backgroundColor: '#FCFCFC'\n  },\n  focusCell: {\n    borderColor: '#000',\n    color: 'red'\n  },\n  errorBorder: {\n    borderWidth: 1,\n    borderColor: 'red'\n  },\n  tryAgain: {\n    textAlign: 'center',\n    marginHorizontal: 10,\n    fontFamily: 'Poppins_700Bold',\n    letterSpacing: 0.09,\n    color: 'black'\n  },\n  complete: {\n    marginHorizontal: 10,\n    fontFamily: 'Poppins_700Bold',\n    letterSpacing: 0.09,\n    fontSize: 14,\n    color: 'black'\n  },\n  enabledButton: {\n    backgroundColor: 'red'\n  },\n  enabledButtonText: {\n    color: 'white'\n  },\n  LoginButton: {\n    marginVertical: 15,\n    backgroundColor: colors.blue,\n    marginHorizontal: 37,\n    padding: 10,\n    borderRadius: 100\n  },\n  LoginButtonText: {\n    color: 'white',\n    fontFamily: 'Poppins_500Medium'\n  }\n});\nexport default Otp;","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","FormData","CodeField","Cursor","useBlurOnFulfill","useClearByFocusCell","Header","LoginButton","colors","useFonts","Poppins_100Thin","Poppins_100Thin_Italic","Poppins_200ExtraLight","Poppins_200ExtraLight_Italic","Poppins_300Light","Poppins_300Light_Italic","Poppins_400Regular","Poppins_400Regular_Italic","Poppins_500Medium","Poppins_500Medium_Italic","Poppins_600SemiBold","Poppins_600SemiBold_Italic","Poppins_700Bold","Poppins_700Bold_Italic","Poppins_800ExtraBold","Poppins_800ExtraBold_Italic","Poppins_900Black","Poppins_900Black_Italic","AppLoading","AuthContext","useNavigation","Otp","setIsAuthenticated","user","setUser","fontsLoaded","visible","setVisible","notificationerror","setNotificationError","cellCount","timerCount","setTimer","value","setValue","error","setError","loading","setLoading","otploading","setOtpLoading","navigation","ref","props","getCellOnLayoutHandler","interval","setInterval","lastTimerCount","clearInterval","length","verify","form","otp","console","log","post","then","response","status","alert","navigate","catch","resendOtp","id","Keyboard","dismiss","styles","container","main","text","otpSection","codeFieldRoot","index","symbol","isFocused","cell","focusCell","errorBorder","fontSize","color","fontFamily","textAlign","flexDirection","justifyContent","complete","tryAgain","LoginButtonText","StyleSheet","create","flex","backgroundColor","letterSpacing","marginVertical","fontWeight","height","width","borderRadius","marginHorizontal","borderColor","borderWidth","enabledButton","enabledButtonText","blue","padding"],"sources":["E:/react-native/task management app/Trello/src/screens/authentication/Otp.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    TouchableWithoutFeedback,\r\n    Keyboard,\r\n    ActivityIndicator,\r\n    TouchableOpacity\r\n} from 'react-native';\r\nimport FormData from 'form-data';\r\nimport {\r\n    CodeField,\r\n    Cursor,\r\n    useBlurOnFulfill,\r\n    useClearByFocusCell,\r\n} from 'react-native-confirmation-code-field';\r\nimport Header from '../../components/header/Header';\r\nimport LoginButton from '../../components/button/LoginButton';\r\nimport colors from '../../constant/colors';\r\nimport {\r\n    useFonts,\r\n    Poppins_100Thin,\r\n    Poppins_100Thin_Italic,\r\n    Poppins_200ExtraLight,\r\n    Poppins_200ExtraLight_Italic,\r\n    Poppins_300Light,\r\n    Poppins_300Light_Italic,\r\n    Poppins_400Regular,\r\n    Poppins_400Regular_Italic,\r\n    Poppins_500Medium,\r\n    Poppins_500Medium_Italic,\r\n    Poppins_600SemiBold,\r\n    Poppins_600SemiBold_Italic,\r\n    Poppins_700Bold,\r\n    Poppins_700Bold_Italic,\r\n    Poppins_800ExtraBold,\r\n    Poppins_800ExtraBold_Italic,\r\n    Poppins_900Black,\r\n    Poppins_900Black_Italic,\r\n} from '@expo-google-fonts/poppins';\r\nimport AppLoading from 'expo-app-loading';\r\nimport { AuthContext } from '../../Context/Auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Otp = () => {\r\n    const { setIsAuthenticated , user , setUser } = useContext(AuthContext)\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        Poppins_100Thin,\r\n        Poppins_100Thin_Italic,\r\n        Poppins_200ExtraLight,\r\n        Poppins_200ExtraLight_Italic,\r\n        Poppins_300Light,\r\n        Poppins_300Light_Italic,\r\n        Poppins_400Regular,\r\n        Poppins_400Regular_Italic,\r\n        Poppins_500Medium,\r\n        Poppins_500Medium_Italic,\r\n        Poppins_600SemiBold,\r\n        Poppins_600SemiBold_Italic,\r\n        Poppins_700Bold,\r\n        Poppins_700Bold_Italic,\r\n        Poppins_800ExtraBold,\r\n        Poppins_800ExtraBold_Italic,\r\n        Poppins_900Black,\r\n        Poppins_900Black_Italic,\r\n    });\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [notificationerror, setNotificationError] = useState(false);\r\n    const cellCount = 4;\r\n    const [timerCount, setTimer] = useState(10);\r\n    const [value, setValue] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [otploading, setOtpLoading] = useState(false);\r\n    const navigation = useNavigation()\r\n    const ref = useBlurOnFulfill({ value, cellCount });\r\n    const [props, getCellOnLayoutHandler] = useClearByFocusCell({\r\n        value,\r\n        setValue,\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(() => {\r\n            setTimer(lastTimerCount => {\r\n                lastTimerCount <= 1 && clearInterval(interval);\r\n                return lastTimerCount - 1;\r\n            });\r\n        }, 1000); //each count lasts for a second\r\n        //cleanup the interval on complete\r\n        return () => clearInterval(interval);\r\n    }, [timerCount]);\r\n    useEffect(() => {\r\n        if (value.length === 4) {\r\n            setError(false);\r\n        }\r\n    }, [value]);\r\n\r\n    const verify = ()=>{\r\n        const form = {\r\n            otp : value\r\n        };\r\n        console.log(form)\r\n        axios.post('http://192.168.0.106:5000/verify', form)\r\n        .then(function (response) {\r\n            console.log(response.status);\r\n            if (response.status == 204) {\r\n                alert(\"Please Fill valid OTP!\")\r\n            } else if(response.status == 203) {\r\n                alert(\"Please fill valid information\")\r\n            }else if(response.status == 202) {\r\n                navigation.navigate('loginform')\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n    \r\n\r\n    const resendOtp = ()  =>{\r\n        const form = {\r\n            id :user\r\n        }\r\n        axios.post('http://192.168.0.106:5000/resend', form)\r\n        .then(function (response) {\r\n            alert(\"OTP sent again\")\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    return !fontsLoaded ? <AppLoading /> : (\r\n        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n            <View style={styles.container}>\r\n                <Header />\r\n                <View style={styles.main}>\r\n                    <Text style={styles.text}>please enter the verfication code</Text>\r\n\r\n                    <View style={styles.otpSection}>\r\n                        <CodeField\r\n                            autoFocus={true}\r\n                            ref={ref}\r\n                            {...props}\r\n                            // Use `caretHidden={false}` when users can't paste a text value, because context menu doesn't appear\r\n                            value={value}\r\n                            textInputStyle={\r\n                                {\r\n                                    // shadowColor: 'black',\r\n                                    // shadowOpacity: 0.26,\r\n                                    // shadowOffset: {width: 0, height: 2},\r\n                                    // shadowRadius: 8,\r\n                                    // width: 50,\r\n                                    // height: 50,\r\n                                    // padding: 5,\r\n                                    // fontSize: 45,\r\n                                    // borderRadius: 5,\r\n                                }\r\n                            }\r\n                            onChangeText={setValue}\r\n                            cellCount={cellCount}\r\n                            rootStyle={styles.codeFieldRoot}\r\n                            keyboardType=\"number-pad\"\r\n                            textContentType=\"oneTimeCode\"\r\n                            renderCell={({ index, symbol, isFocused }) => (\r\n                                <View\r\n                                    key={index}\r\n                                    onLayout={getCellOnLayoutHandler(index)}\r\n                                    style={[\r\n                                        styles.cell,\r\n                                        isFocused && styles.focusCell,\r\n                                        error === true && styles.errorBorder,\r\n                                    ]}>\r\n                                    <Text\r\n                                        style={{\r\n                                            fontSize: 45,\r\n                                            // fontWeight: '600',\r\n                                            color: 'black',\r\n                                            fontFamily: 'Montserrat-Black',\r\n\r\n                                            textAlign: 'center',\r\n                                        }}\r\n                                        allowFontScaling={false}>\r\n                                        {symbol || (isFocused ? <Cursor /> : null)}\r\n                                    </Text>\r\n                                </View>\r\n                            )}\r\n                        />\r\n                    </View>\r\n\r\n                    {otploading ? (\r\n                        <ActivityIndicator\r\n                            // color=\"#00ff00\"\r\n                            color={'red'}\r\n                            size=\"large\"\r\n                        />\r\n                    ) : value.length === 4 && timerCount > 0 ? (\r\n                        <View\r\n                            style={{\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'center',\r\n                            }}>\r\n                            <Text style={styles.complete}>Complete </Text>\r\n                            <FontAwesome name=\"check\" color={'red'} size={18} />\r\n                        </View>\r\n                    ) : timerCount <= 0 ? (\r\n                        <TouchableOpacity onPress={() => resendOtp()}>\r\n                            <Text style={styles.tryAgain}>Tap to Send Otp Again</Text>\r\n                        </TouchableOpacity>\r\n                    ) : (\r\n                        <Text style={styles.tryAgain}>Try Again in {timerCount}</Text>\r\n                    )}\r\n                </View>\r\n                <LoginButton onPress={() => verify()} title={'Check Otp'} textStyle={styles.LoginButtonText} style={styles.LoginButton} />\r\n\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        justifyContent: 'space-evenly',\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n        color: 'black',\r\n        textAlign: 'center',\r\n        fontFamily: 'Poppins_700Bold',\r\n        letterSpacing: 0.09,\r\n\r\n    },\r\n\r\n    // Otp code\r\n\r\n    otpSection: {\r\n        marginVertical: 24,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n    },\r\n    cell: {\r\n        // backgroundColor: 'red',\r\n        fontWeight: '600',\r\n        color: 'red',\r\n        fontFamily: 'Poppins_700Bold',\r\n        fontSize: 56,\r\n        textAlign: 'center',\r\n        height: 102,\r\n        width: 77,\r\n        borderRadius: 10,\r\n        marginHorizontal: 3,\r\n        justifyContent: 'center',\r\n        backgroundColor: '#FCFCFC'\r\n    },\r\n    focusCell: {\r\n        borderColor: '#000',\r\n        color: 'red',\r\n    },\r\n    errorBorder: {\r\n        borderWidth: 1,\r\n        borderColor: 'red',\r\n    },\r\n\r\n    tryAgain: {\r\n        textAlign: 'center',\r\n        marginHorizontal: 10,\r\n        fontFamily: 'Poppins_700Bold',\r\n        letterSpacing: 0.09,\r\n        color: 'black',\r\n    },\r\n    complete: {\r\n        marginHorizontal: 10,\r\n        fontFamily: 'Poppins_700Bold',\r\n        letterSpacing: 0.09,\r\n        fontSize: 14,\r\n        color: 'black',\r\n    },\r\n    enabledButton: {\r\n        backgroundColor: 'red',\r\n    },\r\n    enabledButtonText: {\r\n        color: 'white',\r\n    },\r\n    LoginButton: { marginVertical: 15, backgroundColor: colors.blue, marginHorizontal: 37, padding: 10, borderRadius: 100 },\r\n    LoginButtonText: { color: 'white', fontFamily: 'Poppins_500Medium' },\r\n    // disabledButton: {\r\n    //   backgroundColor: colors.disabledButton,\r\n    // },\r\n    // disabledButtonText: {\r\n    //   color: colors.darktext,\r\n    // },\r\n    // fawad code wiill merge it latter\r\n});\r\nexport default Otp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}