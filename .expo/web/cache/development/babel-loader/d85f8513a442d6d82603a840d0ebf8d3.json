{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport colors from \"../../constant/colors\";\nimport { useFonts, Poppins_100Thin, Poppins_100Thin_Italic, Poppins_200ExtraLight, Poppins_200ExtraLight_Italic, Poppins_300Light, Poppins_300Light_Italic, Poppins_400Regular, Poppins_400Regular_Italic, Poppins_500Medium, Poppins_500Medium_Italic, Poppins_600SemiBold, Poppins_600SemiBold_Italic, Poppins_700Bold, Poppins_700Bold_Italic, Poppins_800ExtraBold, Poppins_800ExtraBold_Italic, Poppins_900Black, Poppins_900Black_Italic } from '@expo-google-fonts/poppins';\nimport LoginButton from \"../../components/button/LoginButton\";\nimport { Entypo } from '@expo/vector-icons';\nimport AppLoading from \"expo-app-loading\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AuthContext } from \"../../Context/Auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _useContext = useContext(AuthContext),\n      setIsAuthenticated = _useContext.setIsAuthenticated,\n      isAuthenticated = _useContext.isAuthenticated;\n\n  var _useFonts = useFonts({\n    Poppins_100Thin: Poppins_100Thin,\n    Poppins_100Thin_Italic: Poppins_100Thin_Italic,\n    Poppins_200ExtraLight: Poppins_200ExtraLight,\n    Poppins_200ExtraLight_Italic: Poppins_200ExtraLight_Italic,\n    Poppins_300Light: Poppins_300Light,\n    Poppins_300Light_Italic: Poppins_300Light_Italic,\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_400Regular_Italic: Poppins_400Regular_Italic,\n    Poppins_500Medium: Poppins_500Medium,\n    Poppins_500Medium_Italic: Poppins_500Medium_Italic,\n    Poppins_600SemiBold: Poppins_600SemiBold,\n    Poppins_600SemiBold_Italic: Poppins_600SemiBold_Italic,\n    Poppins_700Bold: Poppins_700Bold,\n    Poppins_700Bold_Italic: Poppins_700Bold_Italic,\n    Poppins_800ExtraBold: Poppins_800ExtraBold,\n    Poppins_800ExtraBold_Italic: Poppins_800ExtraBold_Italic,\n    Poppins_900Black: Poppins_900Black,\n    Poppins_900Black_Italic: Poppins_900Black_Italic\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var navigation = useNavigation();\n  return !fontsLoaded ? _jsx(AppLoading, {}) : _jsxs(View, {\n    style: styles.Mainview,\n    children: [_jsxs(View, {\n      style: styles.TrelloView,\n      children: [_jsx(Text, {\n        style: styles.trelloTitle,\n        children: \"trello\"\n      }), _jsx(Entypo, {\n        style: styles.circleIcon,\n        name: \"circle\",\n        size: 10,\n        color: colors.blue\n      })]\n    }), _jsx(Text, {\n      style: styles.trelloDes,\n      children: \"A new way to engage your team online.\"\n    }), _jsx(LoginButton, {\n      onPress: function onPress() {\n        return navigation.navigate('signupform');\n      },\n      title: 'Sign up',\n      textStyle: styles.SignUpButtonText,\n      style: styles.SignUpButton\n    }), _jsx(LoginButton, {\n      onPress: function onPress() {\n        return navigation.navigate('loginform');\n      },\n      title: 'Log in',\n      textStyle: styles.LoginButtonText,\n      style: styles.LoginButton\n    })]\n  });\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  Mainview: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  TrelloView: {\n    marginTop: 166,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  trelloTitle: {\n    color: colors.yellow,\n    fontSize: 47,\n    fontFamily: 'Poppins_700Bold'\n  },\n  circleIcon: {\n    marginTop: 20,\n    marginHorizontal: 5\n  },\n  trelloDes: {\n    color: colors.grey,\n    fontSize: 12,\n    marginTop: 15,\n    textAlign: 'center',\n    fontFamily: 'Poppins_700Bold'\n  },\n  SignUpButton: {\n    marginTop: 310,\n    backgroundColor: colors.creamColor,\n    marginHorizontal: 37,\n    padding: 10,\n    borderRadius: 100\n  },\n  SignUpButtonText: {\n    color: colors.blue,\n    fontFamily: 'Poppins_500Medium'\n  },\n  LoginButton: {\n    marginTop: 15,\n    backgroundColor: colors.blue,\n    marginHorizontal: 37,\n    padding: 10,\n    borderRadius: 100\n  },\n  LoginButtonText: {\n    color: 'white',\n    fontFamily: 'Poppins_500Medium'\n  }\n});","map":{"version":3,"names":["React","useContext","colors","useFonts","Poppins_100Thin","Poppins_100Thin_Italic","Poppins_200ExtraLight","Poppins_200ExtraLight_Italic","Poppins_300Light","Poppins_300Light_Italic","Poppins_400Regular","Poppins_400Regular_Italic","Poppins_500Medium","Poppins_500Medium_Italic","Poppins_600SemiBold","Poppins_600SemiBold_Italic","Poppins_700Bold","Poppins_700Bold_Italic","Poppins_800ExtraBold","Poppins_800ExtraBold_Italic","Poppins_900Black","Poppins_900Black_Italic","LoginButton","Entypo","AppLoading","useNavigation","AuthContext","Login","setIsAuthenticated","isAuthenticated","fontsLoaded","navigation","styles","Mainview","TrelloView","trelloTitle","circleIcon","blue","trelloDes","navigate","SignUpButtonText","SignUpButton","LoginButtonText","StyleSheet","create","flex","backgroundColor","marginTop","flexDirection","justifyContent","alignItems","color","yellow","fontSize","fontFamily","marginHorizontal","grey","textAlign","creamColor","padding","borderRadius"],"sources":["E:/react-native/task management app/Trello/src/screens/authentication/Login.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Text, View, StyleSheet } from \"react-native\"\r\nimport colors from \"../../constant/colors\";\r\nimport {\r\n    useFonts,\r\n    Poppins_100Thin,\r\n    Poppins_100Thin_Italic,\r\n    Poppins_200ExtraLight,\r\n    Poppins_200ExtraLight_Italic,\r\n    Poppins_300Light,\r\n    Poppins_300Light_Italic,\r\n    Poppins_400Regular,\r\n    Poppins_400Regular_Italic,\r\n    Poppins_500Medium,\r\n    Poppins_500Medium_Italic,\r\n    Poppins_600SemiBold,\r\n    Poppins_600SemiBold_Italic,\r\n    Poppins_700Bold,\r\n    Poppins_700Bold_Italic,\r\n    Poppins_800ExtraBold,\r\n    Poppins_800ExtraBold_Italic,\r\n    Poppins_900Black,\r\n    Poppins_900Black_Italic,\r\n} from '@expo-google-fonts/poppins';\r\nimport LoginButton from \"../../components/button/LoginButton\";\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { AuthContext } from \"../../Context/Auth\";\r\n\r\nconst Login = () => {\r\n    const {setIsAuthenticated , isAuthenticated} = useContext(AuthContext)\r\n\r\n    let [fontsLoaded] = useFonts({\r\n        Poppins_100Thin,\r\n        Poppins_100Thin_Italic,\r\n        Poppins_200ExtraLight,\r\n        Poppins_200ExtraLight_Italic,\r\n        Poppins_300Light,\r\n        Poppins_300Light_Italic,\r\n        Poppins_400Regular,\r\n        Poppins_400Regular_Italic,\r\n        Poppins_500Medium,\r\n        Poppins_500Medium_Italic,\r\n        Poppins_600SemiBold,\r\n        Poppins_600SemiBold_Italic,\r\n        Poppins_700Bold,\r\n        Poppins_700Bold_Italic,\r\n        Poppins_800ExtraBold,\r\n        Poppins_800ExtraBold_Italic,\r\n        Poppins_900Black,\r\n        Poppins_900Black_Italic,\r\n    });\r\n\r\n    const navigation = useNavigation()\r\n    return !fontsLoaded ? <AppLoading /> : (\r\n        <View style={styles.Mainview}>\r\n            <View style={styles.TrelloView}>\r\n                <Text style={styles.trelloTitle}>trello</Text>\r\n                <Entypo style={styles.circleIcon} name=\"circle\" size={10} color={colors.blue} />\r\n            </View>\r\n            <Text style={styles.trelloDes}>A new way to engage your team online.</Text>\r\n            <LoginButton onPress={() => navigation.navigate('signupform')} title={'Sign up'} textStyle={styles.SignUpButtonText} style={styles.SignUpButton} />\r\n            <LoginButton onPress={() => navigation.navigate('loginform')} title={'Log in'} textStyle={styles.LoginButtonText} style={styles.LoginButton} />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n    Mainview: { flex: 1, backgroundColor: '#fff' },\r\n    TrelloView: { marginTop: 166, flexDirection: 'row', justifyContent: 'center', alignItems: 'center' },\r\n    trelloTitle: { color: colors.yellow, fontSize: 47, fontFamily: 'Poppins_700Bold' },\r\n    circleIcon: { marginTop: 20, marginHorizontal: 5 },\r\n    trelloDes: { color: colors.grey, fontSize: 12, marginTop: 15, textAlign: 'center', fontFamily: 'Poppins_700Bold' },\r\n    SignUpButton: { marginTop: 310, backgroundColor: colors.creamColor, marginHorizontal: 37, padding: 10, borderRadius: 100 },\r\n    SignUpButtonText: { color: colors.blue, fontFamily: 'Poppins_500Medium' },\r\n    LoginButton: { marginTop: 15, backgroundColor: colors.blue, marginHorizontal: 37, padding: 10, borderRadius: 100 },\r\n    LoginButtonText: { color: 'white', fontFamily: 'Poppins_500Medium' },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}