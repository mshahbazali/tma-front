{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TabView, SceneMap, TabBar } from 'react-native-tab-view';\nimport SearchHeader from \"../../components/header/SearchHeader\";\nimport colors from \"../../constant/colors\";\nimport About from \"../setting/About\";\nimport TermAndCondition from \"../setting/TermAndCondition\";\nimport Groups from \"./Groups\";\nimport People from \"./People\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport axios from 'axios';\nimport { AuthContext } from \"../../Context/Auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialLayout = {\n  width: Dimensions.get('window').width\n};\nexport default function TabViewExample() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newWorkSpace = _useState4[0],\n      setNewWorkSpace = _useState4[1];\n\n  var getNewWorkSpace = function getNewWorkSpace() {\n    var form = {\n      userId: user == null ? void 0 : user._id\n    };\n    axios.post('http://192.168.0.106:5000/workspace/getNew', form).then(function (response) {\n      setNewWorkSpace(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(function () {\n    getNewWorkSpace();\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsx(SearchHeader, {\n      placeholderTextColor: colors.grey,\n      placeholder: \"Search\",\n      onChange: function onChange(e) {\n        return setValue(e);\n      },\n      value: value,\n      onPress: function onPress() {\n        return navigation.navigate('fulllist');\n      }\n    }), newWorkSpace ? newWorkSpace.length === 0 ? _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 20,\n          color: \"blue\"\n        },\n        children: \"No Workspace found\"\n      })\n    }) : _jsx(Groups, {\n      data: newWorkSpace\n    }) : null]\n  });\n}\nvar styles = StyleSheet.create({\n  scene: {\n    flex: 1\n  },\n  renderTabBarStyle: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  tabbarstyle: {\n    backgroundColor: '#fff',\n    elevation: 0\n  }\n});","map":{"version":3,"names":["React","useContext","useState","useEffect","TabView","SceneMap","TabBar","SearchHeader","colors","About","TermAndCondition","Groups","People","useNavigation","axios","AuthContext","initialLayout","width","Dimensions","get","TabViewExample","value","setValue","navigation","user","newWorkSpace","setNewWorkSpace","getNewWorkSpace","form","userId","_id","post","then","response","data","catch","error","console","log","grey","e","navigate","length","flex","alignItems","justifyContent","fontSize","color","styles","StyleSheet","create","scene","renderTabBarStyle","flexDirection","backgroundColor","tabbarstyle","elevation"],"sources":["E:/react-native/task management app/Trello/src/screens/SearchTabs/Index.js"],"sourcesContent":["import React ,{useContext , useState , useEffect} from 'react';\r\nimport { View, StyleSheet, Dimensions, Text } from 'react-native';\r\nimport { TabView, SceneMap, TabBar } from 'react-native-tab-view';\r\nimport SearchHeader from '../../components/header/SearchHeader';\r\nimport colors from '../../constant/colors';\r\nimport About from '../setting/About';\r\nimport TermAndCondition from '../setting/TermAndCondition';\r\nimport Groups from './Groups';\r\nimport People from './People';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../Context/Auth';\r\n\r\n\r\n\r\nconst initialLayout = { width: Dimensions.get('window').width };\r\n\r\nexport default function TabViewExample() {\r\n  const [value, setValue] = useState('');\r\n  const navigation = useNavigation()\r\n  const { user } = useContext(AuthContext)\r\n  const [newWorkSpace, setNewWorkSpace] = useState()\r\n  // const [index, setIndex] =useState(0);\r\n  // const [routes] = useState([\r\n  //   { key: 'first', title: 'Group' },\r\n  //   { key: 'second', title: 'People' },\r\n  // ]);\r\n\r\n\r\n  // const renderScene = SceneMap({\r\n  //   first: Groups,\r\n  //   second: People,\r\n  // });\r\n\r\n  // const renderTabBar = props => (\r\n  //   <View\r\n  //     style={styles.renderTabBarStyle}>\r\n\r\n  //     <TabBar\r\n  //       {...props}\r\n  //       indicatorStyle={{ backgroundColor: colors.yellow }}\r\n  //       style={styles.tabbarstyle}\r\n  //       activeColor={{ color: 'black' }}\r\n  //       inactiveColor={{ color: 'black' }}\r\n  //       tabStyle={{ width: 150, paddingLeft: 'auto' }}\r\n  //       // labelStyle ={{  }}\r\n\r\n  //       bounces={true}\r\n  //       scrollEnabled={true}\r\n  //     />\r\n  //   </View>\r\n\r\n  // );\r\n\r\n  const getNewWorkSpace = () => {\r\n    const form = {\r\n      userId: user?._id\r\n    }\r\n    axios.post('http://192.168.0.106:5000/workspace/getNew', form)\r\n      .then(function (response) {\r\n        setNewWorkSpace(response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getNewWorkSpace()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <SearchHeader\r\n        placeholderTextColor={colors.grey}\r\n        placeholder=\"Search\"\r\n        onChange={(e) => setValue(e)}\r\n        value={value}\r\n        onPress={() => navigation.navigate('fulllist')}\r\n      />\r\n      {/* <TabView\r\n        navigationState={{ index, routes }}\r\n        renderScene={renderScene}\r\n        onIndexChange={setIndex}\r\n        renderTabBar={renderTabBar}\r\n        initialLayout={initialLayout}\r\n      /> */}\r\n      {newWorkSpace ?\r\n        newWorkSpace.length === 0 ?\r\n          <View style={{flex:1,alignItems:\"center\",justifyContent:\"center\"}}>\r\n            <Text style={{fontSize:20,color:\"blue\"}}>No Workspace found</Text>\r\n          </View>\r\n          : <Groups data={newWorkSpace} />\r\n        : null}\r\n    </>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  scene: {\r\n    flex: 1,\r\n  },\r\n  renderTabBarStyle: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff',\r\n    // borderBottomColor : 'red',\r\n    // borderWidth : 10\r\n  },\r\n  tabbarstyle: {\r\n    backgroundColor: '#fff',\r\n    elevation: 0,\r\n    // paddingTop: 25,\r\n\r\n  }\r\n});"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA4BC,QAA5B,EAAuCC,SAAvC,QAAuD,OAAvD;;;;;AAEA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,MAA5B,QAA0C,uBAA1C;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT;;;;AAIA,IAAMC,aAAa,GAAG;EAAEC,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF;AAAlC,CAAtB;AAEA,eAAe,SAASG,cAAT,GAA0B;EACvC,gBAA0BlB,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOmB,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,UAAU,GAAGV,aAAa,EAAhC;;EACA,kBAAiBZ,UAAU,CAACc,WAAD,CAA3B;EAAA,IAAQS,IAAR,eAAQA,IAAR;;EACA,iBAAwCtB,QAAQ,EAAhD;EAAA;EAAA,IAAOuB,YAAP;EAAA,IAAqBC,eAArB;;EAiCA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC5B,IAAMC,IAAI,GAAG;MACXC,MAAM,EAAEL,IAAF,oBAAEA,IAAI,CAAEM;IADH,CAAb;IAGAhB,KAAK,CAACiB,IAAN,CAAW,4CAAX,EAAyDH,IAAzD,EACGI,IADH,CACQ,UAAUC,QAAV,EAAoB;MACxBP,eAAe,CAACO,QAAQ,CAACC,IAAV,CAAf;IACD,CAHH,EAIGC,KAJH,CAIS,UAAUC,KAAV,EAAiB;MACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CANH;EAOD,CAXD;;EAcAjC,SAAS,CAAC,YAAM;IACdwB,eAAe;EAChB,CAFQ,EAEN,EAFM,CAAT;EAKA,OACE;IAAA,WAEE,KAAC,YAAD;MACE,oBAAoB,EAAEnB,MAAM,CAAC+B,IAD/B;MAEE,WAAW,EAAC,QAFd;MAGE,QAAQ,EAAE,kBAACC,CAAD;QAAA,OAAOlB,QAAQ,CAACkB,CAAD,CAAf;MAAA,CAHZ;MAIE,KAAK,EAAEnB,KAJT;MAKE,OAAO,EAAE;QAAA,OAAME,UAAU,CAACkB,QAAX,CAAoB,UAApB,CAAN;MAAA;IALX,EAFF,EAgBGhB,YAAY,GACXA,YAAY,CAACiB,MAAb,KAAwB,CAAxB,GACE,KAAC,IAAD;MAAM,KAAK,EAAE;QAACC,IAAI,EAAC,CAAN;QAAQC,UAAU,EAAC,QAAnB;QAA4BC,cAAc,EAAC;MAA3C,CAAb;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAE;UAACC,QAAQ,EAAC,EAAV;UAAaC,KAAK,EAAC;QAAnB,CAAb;QAAA;MAAA;IADF,EADF,GAII,KAAC,MAAD;MAAQ,IAAI,EAAEtB;IAAd,EALO,GAMT,IAtBN;EAAA,EADF;AA6BD;AAED,IAAMuB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,KAAK,EAAE;IACLR,IAAI,EAAE;EADD,CADwB;EAI/BS,iBAAiB,EAAE;IACjBC,aAAa,EAAE,KADE;IAEjBR,cAAc,EAAE,QAFC;IAGjBS,eAAe,EAAE;EAHA,CAJY;EAW/BC,WAAW,EAAE;IACXD,eAAe,EAAE,MADN;IAEXE,SAAS,EAAE;EAFA;AAXkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}